package com.dummylang.parser;
/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int FUN = 26;
  /** RegularExpression Id. */
  int COMMA = 27;
  /** RegularExpression Id. */
  int WHILE = 28;
  /** RegularExpression Id. */
  int IF = 29;
  /** RegularExpression Id. */
  int BOOLEAN = 30;
  /** RegularExpression Id. */
  int VAR = 31;
  /** RegularExpression Id. */
  int CONST = 32;
  /** RegularExpression Id. */
  int NEW = 33;
  /** RegularExpression Id. */
  int ASSIGN = 34;
  /** RegularExpression Id. */
  int REF = 35;
  /** RegularExpression Id. */
  int PRINTLN = 36;
  /** RegularExpression Id. */
  int ID = 37;
  /** RegularExpression Id. */
  int INT = 38;
  /** RegularExpression Id. */
  int FLOAT = 39;
  /** RegularExpression Id. */
  int LOGICALEQUAL = 40;
  /** RegularExpression Id. */
  int LOWER = 41;
  /** RegularExpression Id. */
  int LOWEROREQUAL = 42;
  /** RegularExpression Id. */
  int OR = 43;
  /** RegularExpression Id. */
  int AND = 44;
  /** RegularExpression Id. */
  int NOT = 45;
  /** RegularExpression Id. */
  int GREATER = 46;
  /** RegularExpression Id. */
  int GREATEROREQUAL = 47;
  /** RegularExpression Id. */
  int PLUS = 48;
  /** RegularExpression Id. */
  int INC = 49;
  /** RegularExpression Id. */
  int MINUS = 50;
  /** RegularExpression Id. */
  int DEC = 51;
  /** RegularExpression Id. */
  int TIMES = 52;
  /** RegularExpression Id. */
  int DIV = 53;
  /** RegularExpression Id. */
  int LPAR = 54;
  /** RegularExpression Id. */
  int RPAR = 55;
  /** RegularExpression Id. */
  int LBRA = 56;
  /** RegularExpression Id. */
  int RBRA = 57;
  /** RegularExpression Id. */
  int EQUAL = 58;
  /** RegularExpression Id. */
  int SEMCOL = 59;
  /** RegularExpression Id. */
  int FINAL = 60;
  /** RegularExpression Id. */
  int STRING = 61;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"\\u000b\"",
    "\"\\u00a0\"",
    "\"\\u1680\"",
    "\"\\u180e\"",
    "\"\\u2000\"",
    "\"\\u2001\"",
    "\"\\u2002\"",
    "\"\\u2003\"",
    "\"\\u2004\"",
    "\"\\u2005\"",
    "\"\\u2006\"",
    "\"\\u2007\"",
    "\"\\u2008\"",
    "\"\\u2009\"",
    "\"\\u200a\"",
    "\"\\u2028\"",
    "\"\\u2029\"",
    "\"\\u202f\"",
    "\"\\u205f\"",
    "\"\\u3000\"",
    "\"fn\"",
    "\",\"",
    "\"while\"",
    "\"if\"",
    "<BOOLEAN>",
    "\"var\"",
    "\"const\"",
    "\"new\"",
    "\":=\"",
    "\"!\"",
    "\"println\"",
    "<ID>",
    "<INT>",
    "<FLOAT>",
    "\"==\"",
    "\"<\"",
    "\"<=\"",
    "\"||\"",
    "\"&&\"",
    "\"~\"",
    "\">\"",
    "\">=\"",
    "\"+\"",
    "\"++\"",
    "\"-\"",
    "\"--\"",
    "\"*\"",
    "\"/\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"=\"",
    "\";\"",
    "\";;\"",
    "<STRING>",
  };

}
